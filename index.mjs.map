{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which returns the first `n` values of a provided iterator.\n*\n* @param {Iterator} iterator - input iterator\n* @param {PositiveInteger} n - number of values\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a positive integer\n* @returns {Iterator} iterator\n*\n* @example\n* var randu = require( '@stdlib/random-iter-randu' );\n*\n* var iter = iterHead( randu(), 10 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\nfunction iterHead( iterator, n ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( '0CS4J', iterator ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( '0CS4I', n ) );\n\t}\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG || i > n ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\treturn {\n\t\t\t'value': v.value,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterHead( iterator[ iteratorSymbol ](), n );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterHead;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which returns the first `n` values of a provided iterator.\n*\n* @module @stdlib/iter-head\n*\n* @example\n* var randu = require( '@stdlib/random-iter-randu' );\n* var iterHead = require( '@stdlib/iter-head' );\n*\n* var iter = iterHead( randu(), 10 );\n*\n* var r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* r = iter.next().value;\n* // returns <number>\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterHead = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterHead;\n"],"names":["setReadOnly","require$$0","isPositiveInteger","require$$1","isPrimitive","isFunction","require$$2","isIteratorLike","require$$3","iteratorSymbol","require$$4","format","require$$5","main","iterHead","iterator","n","iter","FLG","i","TypeError","v","done","next","value","arguments","length","lib"],"mappings":";;6iBAsBA,IAAIA,EAAcC,EACdC,EAAoBC,EAAgDC,YACpEC,EAAaC,EACbC,EAAiBC,EACjBC,EAAiBC,EACjBC,EAASC,EAgHb,IAAAC,EAlFA,SAASC,EAAUC,EAAUC,GAC5B,IAAIC,EACAC,EACAC,EACJ,IAAMZ,EAAgBQ,GACrB,MAAM,IAAIK,UAAWT,EAAQ,QAASI,IAEvC,IAAMb,EAAmBc,GACxB,MAAM,IAAII,UAAWT,EAAQ,QAASK,IAavC,OAXAG,EAAI,EAIJnB,EADAiB,EAAO,GACY,QAenB,WACC,IAAII,EAEJ,GADAF,GAAK,EACAD,GAAOC,EAAIH,EACf,MAAO,CACNM,MAAQ,GAIV,IADAD,EAAIN,EAASQ,QACND,KAEN,OADAJ,GAAM,EACCG,EAER,MAAO,CACNG,MAASH,EAAEG,MACXF,MAAQ,MA7BVtB,EAAaiB,EAAM,UAwCnB,SAAcO,GAEb,GADAN,GAAM,EACDO,UAAUC,OACd,MAAO,CACNF,MAASA,EACTF,MAAQ,GAGV,MAAO,CACNA,MAAQ,MA9CLb,GAAkBJ,EAAYU,EAAUN,KAC5CT,EAAaiB,EAAMR,GAuDpB,WACC,OAAOK,EAAUC,EAAUN,KAAoBO,MAtDzCC,GC5BRU,EALe1B"}